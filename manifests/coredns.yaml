apiVersion: v1
kind: Pod
metadata:
  namespace: kube-system
  name: coredns
  labels:
    component: coredns
    tier: control-plane
spec:
  containers:
  - name: coredns
    image: k8s.gcr.io/coredns:1.3.1
    args:
    - -conf
    - /etc/coredns/Corefile
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    ports:
    - containerPort: 53
      name: dns
      protocol: UDP
    - containerPort: 53
      name: dns-tcp
      protocol: TCP
    - containerPort: 9153
      name: metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - all
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/coredns/kubeconfig.conf
      name: kubeconfig
      readOnly: true
    - mountPath: /etc/coredns/Corefile
      name: corefile
      readOnly: true
  dnsPolicy: Default
  hostNetwork: true
  priorityClassName: system-cluster-critical
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 30
  volumes:
  - hostPath:
      path: /etc/kubernetes/admin.conf
      type: FileOrCreate
    name: kubeconfig
  - hostPath:
      path: /usr/lib/kubernetes/config/Corefile
      type: FileOrCreate
    name: corefile
